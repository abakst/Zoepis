# Makefile.in generated by automake 1.9.6 from Makefile.am.
# examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/glm
pkglibdir = $(libdir)/glm
pkgincludedir = $(includedir)/glm
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-apple-darwin10.4.0
host_triplet = i686-apple-darwin10.4.0
target_triplet = i686-apple-darwin10.4.0
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)
subdir = examples
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/ax_check_gl.m4 \
	$(top_srcdir)/m4/ax_check_glu.m4 \
	$(top_srcdir)/m4/ax_check_glui.m4 \
	$(top_srcdir)/m4/ax_check_glut.m4 \
	$(top_srcdir)/m4/ax_lang_compiler_ms.m4 \
	$(top_srcdir)/m4/compiler-flags.m4 $(top_srcdir)/m4/simage.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
#am__EXEEXT_1 = smooth$(EXEEXT) glutobj$(EXEEXT) \
#	game_glutobj$(EXEEXT)
#am__EXEEXT_2 = gluiobj$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_game_glutobj_OBJECTS = game_glutobj-game_glutobj.$(OBJEXT)
game_glutobj_OBJECTS = $(am_game_glutobj_OBJECTS)
am__DEPENDENCIES_1 =
game_glutobj_DEPENDENCIES = ../glm/libglm.la $(am__DEPENDENCIES_1)
am_gluiobj_OBJECTS = gluiobj-gluiobj.$(OBJEXT)
gluiobj_OBJECTS = $(am_gluiobj_OBJECTS)
gluiobj_DEPENDENCIES = ../glm/libglm.la $(am__DEPENDENCIES_1)
am_glutobj_OBJECTS = glutobj-glutobj.$(OBJEXT)
glutobj_OBJECTS = $(am_glutobj_OBJECTS)
glutobj_DEPENDENCIES = ../glm/libglm.la $(am__DEPENDENCIES_1)
am_smooth_OBJECTS = smooth-gltb.$(OBJEXT) smooth-gltx.$(OBJEXT) \
	smooth-smooth.$(OBJEXT) smooth-trackball.$(OBJEXT)
smooth_OBJECTS = $(am_smooth_OBJECTS)
smooth_DEPENDENCIES = ../glm/libglm.la $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(game_glutobj_SOURCES) $(gluiobj_SOURCES) \
	$(glutobj_SOURCES) $(smooth_SOURCES)
DIST_SOURCES = $(game_glutobj_SOURCES) $(gluiobj_SOURCES) \
	$(glutobj_SOURCES) $(smooth_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/bakster/Projects/Haskell/Games2/Zoepis/glm-0.3.1/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/bakster/Projects/Haskell/Games2/Zoepis/glm-0.3.1/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/bakster/Projects/Haskell/Games2/Zoepis/glm-0.3.1/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/bakster/Projects/Haskell/Games2/Zoepis/glm-0.3.1/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/bakster/Projects/Haskell/Games2/Zoepis/glm-0.3.1/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEVILLIBS = 
ECHO = /bin/echo
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GLUI_CFLAGS = 
GLUI_LIBS = 
GLUT_CFLAGS = 
GLUT_LIBS = 
GLU_CFLAGS = 
GLU_LIBS = 
GL_CFLAGS = 
GL_LIBS = 
HAVE_GIF_FALSE = 
HAVE_GIF_TRUE = #
HAVE_GLUI_FALSE = 
HAVE_GLUI_TRUE = #
HAVE_GLUT_FALSE = 
HAVE_GLUT_TRUE = #
HAVE_SDL_IMAGE_FALSE = 
HAVE_SDL_IMAGE_TRUE = #
HAVE_TIFF_FALSE = 
HAVE_TIFF_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JPEGLIBS = 
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/bakster/Projects/Haskell/Games2/Zoepis/glm-0.3.1/missing --run makeinfo
OBJEXT = o
PACKAGE = glm
PACKAGE_BUGREPORT = 
PACKAGE_NAME = glm
PACKAGE_STRING = glm 0.3.1
PACKAGE_TARNAME = glm
PACKAGE_VERSION = 0.3.1
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
RANLIB = ranlib
SDL_IMAGELIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SUPPORT_LIBS = 
VERSION = 0.3.1
WARN_CFLAGS = -Wall -Wmissing-prototypes 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-apple-darwin10.4.0
build_alias = 
build_cpu = i686
build_os = darwin10.4.0
build_vendor = apple
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-apple-darwin10.4.0
host_alias = 
host_cpu = i686
host_os = darwin10.4.0
host_vendor = apple
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/bakster/Projects/Haskell/Games2/Zoepis/glm-0.3.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = $(install_sh) -d
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sim_ac_simage_configcmd = 
sysconfdir = ${prefix}/etc
target = i686-apple-darwin10.4.0
target_alias = 
target_cpu = i686
target_os = darwin10.4.0
target_vendor = apple
AM_CFLAGS = $(WARN_CFLAGS)
#GLUTPROGS = smooth glutobj game_glutobj
#GLUIPROGS = gluiobj
smooth_CFLAGS = -I$(top_srcdir)/glm $(GLUT_CFLAGS)
smooth_SOURCES = dirent32.h gltb.c gltb.h gltx.c gltx.h smooth.c trackball.c trackball.h
smooth_LDADD = ../glm/libglm.la $(GLUT_LIBS)
gluiobj_CXXFLAGS = -I$(top_srcdir)/glm $(GLUI_CFLAGS)
gluiobj_SOURCES = gluiobj.cpp
gluiobj_LDADD = ../glm/libglm.la $(GLUI_LIBS)
glutobj_CFLAGS = -I$(top_srcdir)/glm $(GLUT_CFLAGS)
glutobj_SOURCES = glutobj.c
glutobj_LDADD = ../glm/libglm.la $(GLUT_LIBS)
game_glutobj_CFLAGS = -I$(top_srcdir)/glm $(GLUT_CFLAGS)
game_glutobj_SOURCES = game_glutobj.c
game_glutobj_LDADD = ../glm/libglm.la $(GLUT_LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  examples/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
game_glutobj$(EXEEXT): $(game_glutobj_OBJECTS) $(game_glutobj_DEPENDENCIES) 
	@rm -f game_glutobj$(EXEEXT)
	$(LINK) $(game_glutobj_LDFLAGS) $(game_glutobj_OBJECTS) $(game_glutobj_LDADD) $(LIBS)
gluiobj$(EXEEXT): $(gluiobj_OBJECTS) $(gluiobj_DEPENDENCIES) 
	@rm -f gluiobj$(EXEEXT)
	$(CXXLINK) $(gluiobj_LDFLAGS) $(gluiobj_OBJECTS) $(gluiobj_LDADD) $(LIBS)
glutobj$(EXEEXT): $(glutobj_OBJECTS) $(glutobj_DEPENDENCIES) 
	@rm -f glutobj$(EXEEXT)
	$(LINK) $(glutobj_LDFLAGS) $(glutobj_OBJECTS) $(glutobj_LDADD) $(LIBS)
smooth$(EXEEXT): $(smooth_OBJECTS) $(smooth_DEPENDENCIES) 
	@rm -f smooth$(EXEEXT)
	$(LINK) $(smooth_LDFLAGS) $(smooth_OBJECTS) $(smooth_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/game_glutobj-game_glutobj.Po
include ./$(DEPDIR)/gluiobj-gluiobj.Po
include ./$(DEPDIR)/glutobj-glutobj.Po
include ./$(DEPDIR)/smooth-gltb.Po
include ./$(DEPDIR)/smooth-gltx.Po
include ./$(DEPDIR)/smooth-smooth.Po
include ./$(DEPDIR)/smooth-trackball.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

game_glutobj-game_glutobj.o: game_glutobj.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(game_glutobj_CFLAGS) $(CFLAGS) -MT game_glutobj-game_glutobj.o -MD -MP -MF "$(DEPDIR)/game_glutobj-game_glutobj.Tpo" -c -o game_glutobj-game_glutobj.o `test -f 'game_glutobj.c' || echo '$(srcdir)/'`game_glutobj.c; \
	then mv -f "$(DEPDIR)/game_glutobj-game_glutobj.Tpo" "$(DEPDIR)/game_glutobj-game_glutobj.Po"; else rm -f "$(DEPDIR)/game_glutobj-game_glutobj.Tpo"; exit 1; fi
#	source='game_glutobj.c' object='game_glutobj-game_glutobj.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(game_glutobj_CFLAGS) $(CFLAGS) -c -o game_glutobj-game_glutobj.o `test -f 'game_glutobj.c' || echo '$(srcdir)/'`game_glutobj.c

game_glutobj-game_glutobj.obj: game_glutobj.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(game_glutobj_CFLAGS) $(CFLAGS) -MT game_glutobj-game_glutobj.obj -MD -MP -MF "$(DEPDIR)/game_glutobj-game_glutobj.Tpo" -c -o game_glutobj-game_glutobj.obj `if test -f 'game_glutobj.c'; then $(CYGPATH_W) 'game_glutobj.c'; else $(CYGPATH_W) '$(srcdir)/game_glutobj.c'; fi`; \
	then mv -f "$(DEPDIR)/game_glutobj-game_glutobj.Tpo" "$(DEPDIR)/game_glutobj-game_glutobj.Po"; else rm -f "$(DEPDIR)/game_glutobj-game_glutobj.Tpo"; exit 1; fi
#	source='game_glutobj.c' object='game_glutobj-game_glutobj.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(game_glutobj_CFLAGS) $(CFLAGS) -c -o game_glutobj-game_glutobj.obj `if test -f 'game_glutobj.c'; then $(CYGPATH_W) 'game_glutobj.c'; else $(CYGPATH_W) '$(srcdir)/game_glutobj.c'; fi`

glutobj-glutobj.o: glutobj.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glutobj_CFLAGS) $(CFLAGS) -MT glutobj-glutobj.o -MD -MP -MF "$(DEPDIR)/glutobj-glutobj.Tpo" -c -o glutobj-glutobj.o `test -f 'glutobj.c' || echo '$(srcdir)/'`glutobj.c; \
	then mv -f "$(DEPDIR)/glutobj-glutobj.Tpo" "$(DEPDIR)/glutobj-glutobj.Po"; else rm -f "$(DEPDIR)/glutobj-glutobj.Tpo"; exit 1; fi
#	source='glutobj.c' object='glutobj-glutobj.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glutobj_CFLAGS) $(CFLAGS) -c -o glutobj-glutobj.o `test -f 'glutobj.c' || echo '$(srcdir)/'`glutobj.c

glutobj-glutobj.obj: glutobj.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glutobj_CFLAGS) $(CFLAGS) -MT glutobj-glutobj.obj -MD -MP -MF "$(DEPDIR)/glutobj-glutobj.Tpo" -c -o glutobj-glutobj.obj `if test -f 'glutobj.c'; then $(CYGPATH_W) 'glutobj.c'; else $(CYGPATH_W) '$(srcdir)/glutobj.c'; fi`; \
	then mv -f "$(DEPDIR)/glutobj-glutobj.Tpo" "$(DEPDIR)/glutobj-glutobj.Po"; else rm -f "$(DEPDIR)/glutobj-glutobj.Tpo"; exit 1; fi
#	source='glutobj.c' object='glutobj-glutobj.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(glutobj_CFLAGS) $(CFLAGS) -c -o glutobj-glutobj.obj `if test -f 'glutobj.c'; then $(CYGPATH_W) 'glutobj.c'; else $(CYGPATH_W) '$(srcdir)/glutobj.c'; fi`

smooth-gltb.o: gltb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -MT smooth-gltb.o -MD -MP -MF "$(DEPDIR)/smooth-gltb.Tpo" -c -o smooth-gltb.o `test -f 'gltb.c' || echo '$(srcdir)/'`gltb.c; \
	then mv -f "$(DEPDIR)/smooth-gltb.Tpo" "$(DEPDIR)/smooth-gltb.Po"; else rm -f "$(DEPDIR)/smooth-gltb.Tpo"; exit 1; fi
#	source='gltb.c' object='smooth-gltb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -c -o smooth-gltb.o `test -f 'gltb.c' || echo '$(srcdir)/'`gltb.c

smooth-gltb.obj: gltb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -MT smooth-gltb.obj -MD -MP -MF "$(DEPDIR)/smooth-gltb.Tpo" -c -o smooth-gltb.obj `if test -f 'gltb.c'; then $(CYGPATH_W) 'gltb.c'; else $(CYGPATH_W) '$(srcdir)/gltb.c'; fi`; \
	then mv -f "$(DEPDIR)/smooth-gltb.Tpo" "$(DEPDIR)/smooth-gltb.Po"; else rm -f "$(DEPDIR)/smooth-gltb.Tpo"; exit 1; fi
#	source='gltb.c' object='smooth-gltb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -c -o smooth-gltb.obj `if test -f 'gltb.c'; then $(CYGPATH_W) 'gltb.c'; else $(CYGPATH_W) '$(srcdir)/gltb.c'; fi`

smooth-gltx.o: gltx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -MT smooth-gltx.o -MD -MP -MF "$(DEPDIR)/smooth-gltx.Tpo" -c -o smooth-gltx.o `test -f 'gltx.c' || echo '$(srcdir)/'`gltx.c; \
	then mv -f "$(DEPDIR)/smooth-gltx.Tpo" "$(DEPDIR)/smooth-gltx.Po"; else rm -f "$(DEPDIR)/smooth-gltx.Tpo"; exit 1; fi
#	source='gltx.c' object='smooth-gltx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -c -o smooth-gltx.o `test -f 'gltx.c' || echo '$(srcdir)/'`gltx.c

smooth-gltx.obj: gltx.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -MT smooth-gltx.obj -MD -MP -MF "$(DEPDIR)/smooth-gltx.Tpo" -c -o smooth-gltx.obj `if test -f 'gltx.c'; then $(CYGPATH_W) 'gltx.c'; else $(CYGPATH_W) '$(srcdir)/gltx.c'; fi`; \
	then mv -f "$(DEPDIR)/smooth-gltx.Tpo" "$(DEPDIR)/smooth-gltx.Po"; else rm -f "$(DEPDIR)/smooth-gltx.Tpo"; exit 1; fi
#	source='gltx.c' object='smooth-gltx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -c -o smooth-gltx.obj `if test -f 'gltx.c'; then $(CYGPATH_W) 'gltx.c'; else $(CYGPATH_W) '$(srcdir)/gltx.c'; fi`

smooth-smooth.o: smooth.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -MT smooth-smooth.o -MD -MP -MF "$(DEPDIR)/smooth-smooth.Tpo" -c -o smooth-smooth.o `test -f 'smooth.c' || echo '$(srcdir)/'`smooth.c; \
	then mv -f "$(DEPDIR)/smooth-smooth.Tpo" "$(DEPDIR)/smooth-smooth.Po"; else rm -f "$(DEPDIR)/smooth-smooth.Tpo"; exit 1; fi
#	source='smooth.c' object='smooth-smooth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -c -o smooth-smooth.o `test -f 'smooth.c' || echo '$(srcdir)/'`smooth.c

smooth-smooth.obj: smooth.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -MT smooth-smooth.obj -MD -MP -MF "$(DEPDIR)/smooth-smooth.Tpo" -c -o smooth-smooth.obj `if test -f 'smooth.c'; then $(CYGPATH_W) 'smooth.c'; else $(CYGPATH_W) '$(srcdir)/smooth.c'; fi`; \
	then mv -f "$(DEPDIR)/smooth-smooth.Tpo" "$(DEPDIR)/smooth-smooth.Po"; else rm -f "$(DEPDIR)/smooth-smooth.Tpo"; exit 1; fi
#	source='smooth.c' object='smooth-smooth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -c -o smooth-smooth.obj `if test -f 'smooth.c'; then $(CYGPATH_W) 'smooth.c'; else $(CYGPATH_W) '$(srcdir)/smooth.c'; fi`

smooth-trackball.o: trackball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -MT smooth-trackball.o -MD -MP -MF "$(DEPDIR)/smooth-trackball.Tpo" -c -o smooth-trackball.o `test -f 'trackball.c' || echo '$(srcdir)/'`trackball.c; \
	then mv -f "$(DEPDIR)/smooth-trackball.Tpo" "$(DEPDIR)/smooth-trackball.Po"; else rm -f "$(DEPDIR)/smooth-trackball.Tpo"; exit 1; fi
#	source='trackball.c' object='smooth-trackball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -c -o smooth-trackball.o `test -f 'trackball.c' || echo '$(srcdir)/'`trackball.c

smooth-trackball.obj: trackball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -MT smooth-trackball.obj -MD -MP -MF "$(DEPDIR)/smooth-trackball.Tpo" -c -o smooth-trackball.obj `if test -f 'trackball.c'; then $(CYGPATH_W) 'trackball.c'; else $(CYGPATH_W) '$(srcdir)/trackball.c'; fi`; \
	then mv -f "$(DEPDIR)/smooth-trackball.Tpo" "$(DEPDIR)/smooth-trackball.Po"; else rm -f "$(DEPDIR)/smooth-trackball.Tpo"; exit 1; fi
#	source='trackball.c' object='smooth-trackball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smooth_CFLAGS) $(CFLAGS) -c -o smooth-trackball.obj `if test -f 'trackball.c'; then $(CYGPATH_W) 'trackball.c'; else $(CYGPATH_W) '$(srcdir)/trackball.c'; fi`

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

gluiobj-gluiobj.o: gluiobj.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gluiobj_CXXFLAGS) $(CXXFLAGS) -MT gluiobj-gluiobj.o -MD -MP -MF "$(DEPDIR)/gluiobj-gluiobj.Tpo" -c -o gluiobj-gluiobj.o `test -f 'gluiobj.cpp' || echo '$(srcdir)/'`gluiobj.cpp; \
	then mv -f "$(DEPDIR)/gluiobj-gluiobj.Tpo" "$(DEPDIR)/gluiobj-gluiobj.Po"; else rm -f "$(DEPDIR)/gluiobj-gluiobj.Tpo"; exit 1; fi
#	source='gluiobj.cpp' object='gluiobj-gluiobj.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gluiobj_CXXFLAGS) $(CXXFLAGS) -c -o gluiobj-gluiobj.o `test -f 'gluiobj.cpp' || echo '$(srcdir)/'`gluiobj.cpp

gluiobj-gluiobj.obj: gluiobj.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gluiobj_CXXFLAGS) $(CXXFLAGS) -MT gluiobj-gluiobj.obj -MD -MP -MF "$(DEPDIR)/gluiobj-gluiobj.Tpo" -c -o gluiobj-gluiobj.obj `if test -f 'gluiobj.cpp'; then $(CYGPATH_W) 'gluiobj.cpp'; else $(CYGPATH_W) '$(srcdir)/gluiobj.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gluiobj-gluiobj.Tpo" "$(DEPDIR)/gluiobj-gluiobj.Po"; else rm -f "$(DEPDIR)/gluiobj-gluiobj.Tpo"; exit 1; fi
#	source='gluiobj.cpp' object='gluiobj-gluiobj.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gluiobj_CXXFLAGS) $(CXXFLAGS) -c -o gluiobj-gluiobj.obj `if test -f 'gluiobj.cpp'; then $(CYGPATH_W) 'gluiobj.cpp'; else $(CYGPATH_W) '$(srcdir)/gluiobj.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
